-- Create Reservation table
CREATE TABLE Reservation (
    ReservationID INT IDENTITY(1,1) PRIMARY KEY,
    UserID CHAR(10) FOREIGN KEY REFERENCES [User](UserID),
    RoomID CHAR(10) FOREIGN KEY REFERENCES Room(RoomId),
    PrepationTime DATE,
    StartTime DATE,
    EndTime DATE,
    TotalPrice DECIMAL(10,2),
    Status VARCHAR(10),
    Purpose VARCHAR(64),
    NumberGuest INT,
    UserComment CHAR(512),
    AdminComment CHAR(512),
    ForeheadVisitTime DATE
);

-- Create User table
CREATE TABLE [User] (
    UserID CHAR(10) PRIMARY KEY,
    UserName VARCHAR(64),
    E_mail VARCHAR(64),
    Address VARCHAR(64),
    Phone_Num VARCHAR(15),
    BirthDay DATE,
    Gender VARCHAR(20),
    ID_id VARCHAR(20),
    Agreement BIT,
    Status VARCHAR(10)
);

-- Create ID table
CREATE TABLE ID (
    ID_id CHAR(10) PRIMARY KEY,
    UserID CHAR(10) FOREIGN KEY REFERENCES [User](UserID),
    DocumentTypeNumber CHAR(64),
    IssueDate DATE,
    IssuingOffice VARCHAR(15)
);

-- Create Room table
CREATE TABLE Room (
    RoomId CHAR(10) PRIMARY KEY,
    RoomName VARCHAR(64),
    Capacity INT
);

-- Create BookingRules table
CREATE TABLE BookingRules (
    RuleID INT PRIMARY KEY,
    RoomID CHAR(10) FOREIGN KEY REFERENCES Room(RoomId),
    DayofWeek CHAR(10),
    StartTime DATE,
    EndTime DATE,
    PricePerHour INT
);

-- Add foreign key constraint for UserID in Reservation table
ALTER TABLE Reservation
ADD CONSTRAINT FK_Reservation_User FOREIGN KEY (UserID)
REFERENCES [User](UserID);

-- Add foreign key constraint for RoomID in Reservation table
ALTER TABLE Reservation
ADD CONSTRAINT FK_Reservation_Room FOREIGN KEY (RoomID)
REFERENCES Room(RoomId);

-- Add foreign key constraint for UserID in ID table
ALTER TABLE ID
ADD CONSTRAINT FK_ID_User FOREIGN KEY (UserID)
REFERENCES [User](UserID);

-- Add foreign key constraint for RoomID in BookingRules table
ALTER TABLE BookingRules
ADD CONSTRAINT FK_BookingRules_Room FOREIGN KEY (RoomID)
REFERENCES Room(RoomId);






-- creating RoomAvailabilityView
CREATE VIEW RoomAvailabilityView AS
SELECT 
    r.RoomId,
    r.RoomName,
    r.Capacity,
    CASE 
        WHEN b.ReservationID IS NOT NULL THEN 'Booked'
        ELSE 'Available'
    END AS Status,
    COALESCE(b.StartTime, '1900-01-01') AS BookedStartTime, -- Default start time
    COALESCE(b.EndTime, '9999-12-31') AS BookedEndTime     -- Default end time
FROM 
    Room r
LEFT JOIN 
    Reservation b ON r.RoomId = b.RoomID;




-- calling RoomAvailabilityView
SELECT *
FROM RoomAvailabilityView
WHERE BookedStartTime >= '2024-03-01' 
    AND BookedEndTime <= '2024-03-31'
    AND RoomName = 'YourRoomName';
